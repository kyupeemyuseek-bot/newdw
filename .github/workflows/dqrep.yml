name: dbt test + Data Quality Report

on:
  push:
  pull_request:
  workflow_dispatch:
  # schedule:
  #   - cron: "0 0 * * *"   #optional, run daily at midnight UTC

permissions:
  contents: write    # needed for committing reports
  pages: write       # needed for GitHub Pages deployment
  id-token: write    # required for Pages auth

jobs:
  run-dbt-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dbt with Snowflake adapter
        run: |
          pip install dbt-core dbt-snowflake

      - name: Create profiles.yml
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<EOL
          newdw:
            target: dev
            outputs:
              dev:
                type: snowflake
                account: XCPCNDY-WG64940
                user: ANGELOALFONSO
                password: VnpZWXpwnvf2Z4K
                role: ACCOUNTADMIN
                warehouse: COMPUTE_WH
                database: MSITDBTSNOWGIT
                schema: DWPRACTICE
                threads: 1
          EOL

      - name: Run dbt deps
        run: dbt deps --profile newdw

      - name: Run dbt debug
        run: dbt debug --profile newdw

      - name: Run dbt test
        run: dbt test --profile newdw

      - name: Generate Data Quality Report
        run: python scripts/dq_report.py

      - name: Commit & Push report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/dbt_data_quality_report.html
          git commit -m "Update data quality report" || echo "No changes to commit"
          git push

  build-report:
    needs: run-dbt-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (if any)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs   # includes dbt_data_quality_report.html

  deploy:
    needs: build-report
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
